1. User calls registration endpoint -> /addNewUser
2. UserInfoService encodes the password and saves user to database
3. User calls login endpoint with username and password to generate JWT -> /generateToken
4. A new Authentication object is created with the UsernamePasswordAuthenticationToken class
5. AuthenticationManager is called to check authentication
6. AuthenticationManager uses the Authentication Provider class DaoAuthenticationProvider
7. DaoAuthenticationProvider uses UserDetailsService to check the database for matching user
8. If user exists, a UserDetails object is created with UserInfoDetails
9. DaoAuthenticationProvider uses BCryptPasswordEncoder to check password matches
10. If user is authenticated successfully the JwtService is called to generate a new token
11. A new token is generated is using the given SECRET
12. The token is returned to the user
13. User sends request to protected endpoint adding the token in an Authorization header that starts with 'Bearer '
14. The JwtAuthFilter intercepts the request, it extracts the username and loads it from the database
15. The token is validated, and new UsernamePasswordAuthenticationToken object is created and added to the security context
16. After this user may access protected resources if he has sufficient authorities
